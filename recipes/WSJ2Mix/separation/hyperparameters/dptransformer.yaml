# ################################
# Model: ConvTasnet for source separation
# Data : WSJ0-2mix-8k-min
# Author: Cem Subakan
# ################################

# Basic parameters
# Seed needs to be set at top of yaml, before objects with parameters are made
seed: 1234
__set_seed: !!python/object/apply:torch.manual_seed [!ref <seed>]
use_tensorboard: True
tensorboard_logs: runs/1-dptf
output_folder: !ref results/conv_tasnet/<seed>
save_folder: !ref <output_folder>/save
train_log: !ref <output_folder>/train_log.txt

# Neural Parameters
N_epochs: 100
N_batch: 1
lr: 0.0002
train_onthefly: False
loss_fn: 'sisnr'
progressbar: True

# The path for wsj0-mix data
wsj0mixpath: '/network/tmp1/subakany/wsj0-mix/2speakers/'
# wsj0mixpath: !PLACEHOLDER

# The path for the folder which contains wsj0 folder.
# This is used only if the wsj0-mix is not already ready to be used.
# e.g. '/network/tmp1/subakany/wsj0-mix/'
# wsj0path: !PLACEHOLDER

tr_csv: 'wsj_tr.csv'
cv_csv: 'wsj_cv.csv'
tt_csv: 'wsj_tt.csv'
sentence_sorting: random

train_loader: !new:speechbrain.data_io.data_io.DataLoaderFactory
    csv_file: !ref <tr_csv>
    batch_size: !ref <N_batch>
    sentence_sorting: !ref <sentence_sorting>
    csv_read: [mix_wav, s1_wav, s2_wav]

val_loader: !new:speechbrain.data_io.data_io.DataLoaderFactory
    csv_file: !ref <cv_csv>
    batch_size: !ref <N_batch>
    sentence_sorting: !ref <sentence_sorting>
    csv_read: [mix_wav, s1_wav, s2_wav]

test_loader: !new:speechbrain.data_io.data_io.DataLoaderFactory
    csv_file: !ref <tt_csv>
    batch_size: !ref <N_batch>
    sentence_sorting: !ref <sentence_sorting>
    csv_read: [mix_wav, s1_wav, s2_wav]

    #augmentation: !new:speechbrain.lobes.augment.tdsa.TimeDomainSpecAugment
    #    sample_rate: 8000
    #    speeds: [95, 100, 105]

N_encoder_out: 256
kernel_size: 20
kernel_stride: 10

# Dual_Path_RNN:
#  in_channels: 256
#  out_channels: 64
#  hidden_channels: 128
#  kernel_size: 2
#  rnn_type: LSTM
#  norm: ln
#  dropout: 0
#  bidirectional: true
#  num_layers: 6
#  K: 250
#  num_spks: 2


Encoder: !new:speechbrain.lobes.models.dual_pathrnn.Encoder
    kernel_size: !ref <kernel_size>
    out_channels: !ref <N_encoder_out>

MaskNet: !new:speechbrain.lobes.models.dual_pathrnn.Dual_Path_Transformer
    in_channels: !ref <N_encoder_out>
    out_channels: 256
    norm: ln
    dropout: 0
    num_tf_layers: 6
    d_ffn: 2048
    nhead: 8
    num_layers: 1
    K: 250


Decoder: !new:speechbrain.lobes.models.dual_pathrnn.Decoder
    in_channels: !ref <N_encoder_out>
    out_channels: 1
    kernel_size: !ref <kernel_size>
    stride: !ref <kernel_stride>
    bias: False

optimizer: !new:speechbrain.nnet.optimizers.Adam_Optimizer
    learning_rate: !ref <lr>
    weight_decay: 0


epoch_counter: !new:speechbrain.utils.epoch_loop.EpochCounter
    limit: !ref <N_epochs>

checkpointer: !new:speechbrain.utils.checkpoints.Checkpointer
    checkpoints_dir: !ref <save_folder>
    recoverables:
        encoder: !ref <Encoder>
        decoder: !ref <Decoder>
        masknet: !ref <MaskNet>
        optimizer: !ref <optimizer>
        counter: !ref <epoch_counter>

train_logger: !new:speechbrain.utils.train_logger.FileTrainLogger
    save_file: !ref <train_log>
    summary_fns:
        SISNR: !name:speechbrain.utils.train_logger.summarize_error_rate

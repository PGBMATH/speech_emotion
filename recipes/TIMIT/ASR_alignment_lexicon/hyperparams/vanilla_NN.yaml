# ################################
# Model: Vanilla NN
# Authors:
# * Mirco Ravanelli 2020
# * Peter Plantinga 2020
# * Elena Rastorgueva 2020
# ################################

# Seed needs to be set at top of yaml, before objects with parameters are made
seed: 1234  # e.g, 1234
__set_seed: !!python/object/apply:torch.manual_seed [!ref <seed>]
output_folder: !ref results/vanilla_NN/<seed>
wer_file: !ref <output_folder>/wer.txt
save_folder: !ref <output_folder>/save
train_log: !ref <output_folder>/train_log.txt

# Data files
data_folder: /home/mila/r/rastorge/TIMIT  # e.g. /path/to/TIMIT
csv_train: !ref <data_folder>/train.csv
csv_valid: !ref <data_folder>/dev.csv
csv_test: !ref <data_folder>/test.csv

lexicon_path: ../timitdic_prime.txt

# Training parameters
number_of_epochs: 5
batch_size: 256
lr: 0.0003
device: 'cuda:0'
init_training_type: 'viterbi' # 'forward' or 'viterbi' or 'ctc'

switch_training_type: 'viterbi'
switch_training_epoch: 2

# Feature parameters
sample_rate: 16000
n_fft: 400
n_mels: 40

# Model parameters
activation: !name:torch.nn.LeakyReLU
dnn_blocks: 1
dnn_neurons: 2000

# hidden states per phoneme
states_per_phoneme: 5

# Outputs
ground_truth_phn_set: 61 # {61, 48, 39}
lexicon_phn_set: 46
output_neurons: !ref <lexicon_phn_set> * <states_per_phoneme> + 1
blank_index: !ref <lexicon_phn_set> * <states_per_phoneme>

# Functions
model: !new:speechbrain.lobes.models.VanillaNN.VanillaNN
    dnn_blocks: !ref <dnn_blocks>
    dnn_neurons: !ref <dnn_neurons>

output: !new:speechbrain.nnet.linear.Linear
    n_neurons: !ref <output_neurons>
    bias: True

log_softmax: !new:speechbrain.nnet.activations.Softmax
    apply_log: True

optimizer: !new:speechbrain.nnet.optimizers.Adam_Optimizer
    learning_rate: !ref <lr>

lr_annealing: !new:speechbrain.nnet.lr_schedulers.NewBobLRScheduler
    improvement_threshold: 5
    annealing_factor: 1.0 # 0.9
    patient: 0

epoch_counter: !new:speechbrain.utils.epoch_loop.EpochCounter
    limit: !ref <number_of_epochs>

compute_features: !new:speechbrain.lobes.features.fbank.Fbank
    context: True
    left_frames: 1
    right_frames: 1
    sample_rate: !ref <sample_rate>
    n_fft: !ref <n_fft>
    n_mels: !ref <n_mels>

train_loader: !new:speechbrain.data_io.data_io.DataLoaderFactory
    csv_file: !ref <csv_train>
    batch_size: !ref <batch_size>
    sentence_sorting: ascending
    output_folder: !ref <output_folder>
    csv_read: [wav, wrd, phn, ground_truth_phn_ends]

valid_loader: !new:speechbrain.data_io.data_io.DataLoaderFactory
    csv_file: !ref <csv_valid>
    batch_size: !ref <batch_size>
    sentence_sorting: ascending
    output_folder: !ref <output_folder>
    csv_read: [wav, wrd, phn, ground_truth_phn_ends]

test_loader: !new:speechbrain.data_io.data_io.DataLoaderFactory
    csv_file: !ref <csv_test>
    batch_size: !ref <batch_size>
    sentence_sorting: ascending
    output_folder: !ref <output_folder>
    csv_read: [wav, wrd, phn, ground_truth_phn_ends]

aligner: !new:speechbrain.alignment.aligner.HMMAligner
    states_per_phoneme: !ref <states_per_phoneme>
    lexicon_path: !ref <lexicon_path>
    # loss reduction parameters
    batch_reduction: 'sum'
    input_len_norm: True
    target_len_norm: False

compute_cost_ctc: !name:speechbrain.nnet.losses.ctc_loss
    blank_index: !ref <blank_index>

compute_cost_nll: !name:speechbrain.nnet.losses.nll_loss

train_logger: !new:speechbrain.utils.train_logger.FileTrainLogger
    save_file: !ref <train_log>
    summary_fns:
        loss: !name:speechbrain.utils.train_logger.summarize_average
        PER: !name:speechbrain.utils.train_logger.summarize_error_rate
        accuracy: !name:speechbrain.utils.train_logger.summarize_average

checkpointer: !new:speechbrain.utils.checkpoints.Checkpointer
    checkpoints_dir: !ref <save_folder>
    recoverables:
        model: !ref <model>
        output: !ref <output>
        optimizer: !ref <optimizer>
        scheduler: !ref <lr_annealing>
        counter: !ref <epoch_counter>

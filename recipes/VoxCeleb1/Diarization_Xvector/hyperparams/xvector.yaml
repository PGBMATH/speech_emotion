# Basic parameters
output_folder: results
sample_rate: 16000
seed: 1234

# Data files
data_folder: ../../../samples/voxceleb_samples/
csv_train: !ref <data_folder>/train.csv
csv_valid: !ref <data_folder>/dev.csv
csv_test: !ref <data_folder>/test.csv
save_folder: !ref <output_folder>
device: "cpu"

# Neural Parameters
N_batch: 2
lr: 0.1
number_of_epochs: 1

model: !speechbrain.lobes.models.Xvector.Xvector
    output_size: 2  # number of speakers
    tdnn_blocks: 1
    tdnn_stats_pool_blocks: 1
    tdnn_lin_blocks: 1

normalize: !speechbrain.processing.features.InputNormalization
    norm_type: global

#prepare_voxceleb: !speechbrain.data_io.data_preparation.VoxCelebPreparer
    #data_folder: !ref <data_folder>
    #splits: [train, dev, test]
    #save_folder: !ref <data_folder>

compute_features: !speechbrain.lobes.features.mfcc.MFCC
    n_mels: 23
    n_mfcc: 20
    left_frames: 0
    right_frames: 0
    deltas: False

train_loader: !speechbrain.data_io.data_io.DataLoaderFactory
    &loader
    csv_file: !ref <csv_train>
    batch_size: !ref <N_batch>
    csv_read: [wav, spk_id]
    output_folder: !ref <output_folder>
    replacements:
        $data_folder: !ref <data_folder>

valid_loader: !speechbrain.data_io.data_io.DataLoaderFactory
    <<: *loader
    csv_file: !ref <csv_valid>

mean_var_norm: !speechbrain.processing.features.InputNormalization
    norm_type: global

linear: !speechbrain.nnet.linear.Linear
    n_neurons: 2
    bias: True

linear1: !speechbrain.nnet.linear.Linear
    n_neurons: 1024
    bias: False

activation: !torch.nn.LeakyReLU

linear2: !speechbrain.nnet.linear.Linear
    n_neurons: 2
    bias: False

softmax: !speechbrain.nnet.activations.Softmax
    apply_log: True

compute_cost: !speechbrain.nnet.losses.ComputeCost
    cost_type: [nll]

compute_error: !speechbrain.nnet.losses.ComputeCost
    cost_type: [error]

optimizer: !speechbrain.nnet.optimizers.Optimize
    optimizer_type: adam
    learning_rate: !ref <lr>

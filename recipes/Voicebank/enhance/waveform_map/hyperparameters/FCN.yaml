# ################################
# Model: FCN SE baseline
# From paper: "End-to-End Waveform Utterance Enhancement for Direct Evaluation
# Metrics Optimization by Fully Convolutional Neural Networks", TASLP, 2018
# Authors: Szu-Wei, Fu 2020
# ################################


# Seed needs to be set at top of yaml, before objects with parameters are made
seed: 1234
__set_seed: !!python/object/apply:torch.manual_seed [!ref <seed>]

data_folder: !PLACEHOLDER
test_clean_folder: !ref <data_folder>/clean_testset_wav_16k/

output_folder: !ref ./results/FCN/<seed>
save_folder: !ref <output_folder>/save
train_log: !ref <output_folder>/train_log.txt
enhanced_folder: !ref <output_folder>/FCN_enhanced

# Basic parameters
use_tensorboard: True
tensorboard_logs: !ref <output_folder>/logs/

# FFT paremeters
Sample_rate: 16000
Win_length: 32
Hop_length: 16
N_fft: 512
window_fn: !name:torch.hamming_window

# Data files
csv_train: !ref <data_folder>/train.csv
csv_valid: !ref <data_folder>/valid.csv
csv_test: !ref <data_folder>/test.csv

# Training Parameters
number_of_epochs: 150
N_batch: 1
lr: 0.001
device: 'cuda:0'

# Neural parameters
kernel_size: 55
base_channels: 30

train_loader: !new:speechbrain.data_io.data_io.DataLoaderFactory
    csv_file: !ref <csv_train>
    batch_size: !ref <N_batch>
    csv_read: [noisy_wav, clean_wav]
    sentence_sorting: ascending
    output_folder: !ref <output_folder>

valid_loader: !new:speechbrain.data_io.data_io.DataLoaderFactory
    csv_file: !ref <csv_valid>
    batch_size: 4
    csv_read: [noisy_wav, clean_wav]
    sentence_sorting: ascending
    replacements:
        $data_folder: !ref <data_folder>

test_loader: !new:speechbrain.data_io.data_io.DataLoaderFactory
    csv_file: !ref <csv_test>
    batch_size: 1
    csv_read: [noisy_wav, clean_wav]
    replacements:
        $data_folder: !ref <data_folder>

epoch_counter: !new:speechbrain.utils.epoch_loop.EpochCounter
    limit: !ref <number_of_epochs>

conv1: !name:speechbrain.nnet.Conv1d
    out_channels: !ref <base_channels>
    kernel_size: !ref <kernel_size>
conv2: !name:speechbrain.nnet.CNN.Conv1d
    out_channels: !ref <base_channels>
    kernel_size: !ref <kernel_size>
conv3: !name:speechbrain.nnet.CNN.Conv1d
    out_channels: !ref <base_channels>
    kernel_size: !ref <kernel_size>
conv4: !name:speechbrain.nnet.CNN.Conv1d
    out_channels: !ref <base_channels>
    kernel_size: !ref <kernel_size>
conv5: !name:speechbrain.nnet.CNN.Conv1d
    out_channels: !ref <base_channels>
    kernel_size: !ref <kernel_size>
conv6: !name:speechbrain.nnet.CNN.Conv1d
    out_channels: !ref <base_channels>
    kernel_size: !ref <kernel_size>
conv7: !name:speechbrain.nnet.CNN.Conv1d
    out_channels: !ref <base_channels>
    kernel_size: !ref <kernel_size>
conv_out: !name:speechbrain.nnet.CNN.Conv1d
    out_channels: 1
    kernel_size: !ref <kernel_size>

activation: !new:torch.nn.LeakyReLU
    negative_slope: 0.3

IN0: !new:speechbrain.nnet.InstanceNorm1d
    input_size: 1
    track_running_stats: False
    affine: True
IN1: !new:speechbrain.nnet.InstanceNorm1d
    input_size: !ref <base_channels>
    track_running_stats: False
    affine: True
IN2: !new:speechbrain.nnet.InstanceNorm1d
    input_size: !ref <base_channels>
    track_running_stats: False
    affine: True
IN3: !new:speechbrain.nnet.InstanceNorm1d
    input_size: !ref <base_channels>
    track_running_stats: False
    affine: True
IN4: !new:speechbrain.nnet.InstanceNorm1d
    input_size: !ref <base_channels>
    track_running_stats: False
    affine: True
IN5: !new:speechbrain.nnet.InstanceNorm1d
    input_size: !ref <base_channels>
    track_running_stats: False
    affine: True
IN6: !new:speechbrain.nnet.InstanceNorm1d
    input_size: !ref <base_channels>
    track_running_stats: False
    affine: True
IN7: !new:speechbrain.nnet.InstanceNorm1d
    input_size: !ref <base_channels>
    track_running_stats: False
    affine: True

model: !new:speechbrain.nnet.Sequential
    - [null, null, 1]
    - !ref <IN0>
    - !ref <conv1>
    - !ref <IN1>
    - !ref <activation>
    - !ref <conv2>
    - !ref <IN2>
    - !ref <activation>
    - !ref <conv3>
    - !ref <IN3>
    - !ref <activation>
    - !ref <conv4>
    - !ref <IN4>
    - !ref <activation>
    - !ref <conv5>
    - !ref <IN5>
    - !ref <activation>
    - !ref <conv6>
    - !ref <IN6>
    - !ref <activation>
    - !ref <conv7>
    - !ref <IN7>
    - !ref <activation>
    - !ref <conv_out>


opt_class: !name:torch.optim.Adam
    lr: !ref <lr>

checkpointer: !new:speechbrain.Checkpointer
    checkpoints_dir: !ref <save_folder>
    recoverables:
        model: !ref <model>
        counter: !ref <epoch_counter>

hparams:
    use_tensorboard: !ref <use_tensorboard>
    epoch_counter: !ref <epoch_counter>
    model: !ref <model>
    enhanced_folder: !ref <enhanced_folder>
    compute_cost: !name:speechbrain.nnet.mse_loss
    compute_STFT: !new:speechbrain.processing.features.STFT
        sample_rate: !ref <Sample_rate>
        win_length: !ref <Win_length>
        hop_length: !ref <Hop_length>
        n_fft: !ref <N_fft>
        window_fn: !ref <window_fn>
    compute_ISTFT: !new:speechbrain.processing.features.ISTFT
        sample_rate: !ref <Sample_rate>
        win_length: !ref <Win_length>
        hop_length: !ref <Hop_length>
        window_fn: !ref <window_fn>
    mean_var_norm: !new:speechbrain.processing.features.InputNormalization
        norm_type: sentence
    train_logger: !new:speechbrain.utils.train_logger.FileTrainLogger
        save_file: !ref <train_log>

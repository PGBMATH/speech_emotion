# Seed needs to be set at top of yaml, before objects with parameters are made
seed: 1234
__set_seed: !!python/object/apply:torch.manual_seed [!ref <seed>]
output_folder: !ref results/Contextnet_Transformer/<seed>
wer_file: !ref <output_folder>/wer.txt
save_folder: !ref <output_folder>/save
train_log: !ref <output_folder>/train_log.txt

# Data files
data_folder: !PLACEHOLDER  # e.g. /path/to/librispeech
train_set: train-clean-960
csv_train: !ref <data_folder>/train-clean-960.csv
csv_valid: !ref <data_folder>/dev-clean.csv
csv_test: !ref <data_folder>/test-clean.csv

# Training parameters
number_of_epochs: 100
batch_size: 32
lr: 0.0001
ctc_weight: 0.3
gradient_accumulation: 4
device: 'cuda'
multigpu: True
auto_precision_mix: False

# Feature parameters
sample_rate: 16000
n_fft: 400
n_mels: 80

# Model parameters
alpha: 0.5
dropout: 0.1
src_masking: False

# Outputs
output_neurons: 5000
blank_index: 0
label_smoothing: 0.1
pad_id: 0
bos_index: 1
eos_index: 2
unk_id: 3

# Decoding parameters
min_decode_ratio: 0.0
max_decode_ratio: 3
num_epoch_to_valid_search: 1
test_beam_size: 80
length_penalty: 0.3
eos_threshold: 1.5

# Functions
tokenizer: !new:speechbrain.tokenizers.SentencePiece.SentencePiece
    model_dir: !ref <save_folder>
    vocab_size: !ref <output_neurons>
    csv_train: !ref <csv_train>
    csv_read: wrd
    model_type: "unigram" # ["unigram", "bpe", "char"]
    max_sentencepiece_length: 5
    character_coverage: 0.9995 # for language with large set of chars use 0.9995
    pad_id: !ref <pad_id>
    bos_id: !ref <bos_index>
    eos_id: !ref <eos_index>
    unk_id: !ref <unk_id>

CNN: !new:speechbrain.lobes.models.convolution.ConvolutionFrontEnd
    dropout: !ref <dropout>
    norm: !name:speechbrain.nnet.normalization.LayerNorm
    num_blocks: 3
    num_layers_per_block: 1
    out_channels: (128, 128, 256)
    strides: (1, 2, 2)
    residuals: (False, False, False)
    activation: !name:torch.nn.ReLU

Transformer: !new:speechbrain.lobes.models.transformer.TransformerASR.TransformerASR # yamllint disable-line rule:line-length
    tgt_vocab: !ref <output_neurons>
    d_model: 512
    nhead: 8
    num_encoder_layers: 12
    num_decoder_layers: 6
    d_ffn: 2048
    dropout: 0.0
    activation: !name:torch.nn.GELU

ctc_lin: !new:speechbrain.nnet.linear.Linear
    n_neurons: !ref <output_neurons>
    combine_dims: True

seq_lin: !new:speechbrain.nnet.linear.Linear
    n_neurons: !ref <output_neurons>

log_softmax: !new:torch.nn.LogSoftmax
    dim: -1

optimizer: !new:speechbrain.nnet.optimizers.Adam_Optimizer
    learning_rate: !ref <lr>
    betas: (0.9, 0.98)
    weight_decay: 0.000001

lr_annealing: !new:speechbrain.nnet.lr_schedulers.NoamScheduler
    lr_initial: !ref <lr>
    n_warmup_steps: 25000

normalize: !new:speechbrain.processing.features.InputNormalization
    norm_type: global

epoch_counter: !new:speechbrain.utils.epoch_loop.EpochCounter
    limit: !ref <number_of_epochs>

augmentation: !new:speechbrain.lobes.augment.tdsa.TimeDomainSpecAugment
    sample_rate: !ref <sample_rate>
    speeds: [95, 100, 105]

compute_features: !new:speechbrain.lobes.features.fbank.Fbank
    sample_rate: !ref <sample_rate>
    n_fft: !ref <n_fft>
    n_mels: !ref <n_mels>

train_loader: !new:speechbrain.data_io.data_io.DataLoaderFactory
    csv_file: !ref <csv_train>
    batch_size: !ref <batch_size>
    sentence_sorting: random
    output_folder: !ref <output_folder>
    csv_read: [wav, wrd]
    add_padding_label: True
    num_workers: 4
    drop_last: True

valid_loader: !new:speechbrain.data_io.data_io.DataLoaderFactory
    csv_file: !ref <csv_valid>
    batch_size: 4
    sentence_sorting: ascending
    output_folder: !ref <output_folder>
    csv_read: [wav, wrd]
    add_padding_label: True
    num_workers: 4
    drop_last: True

test_loader: !new:speechbrain.data_io.data_io.DataLoaderFactory
    csv_file: !ref <csv_test>
    batch_size: 4
    sentence_sorting: ascending
    output_folder: !ref <output_folder>
    csv_read: [wav, wrd]
    add_padding_label: True
    num_workers: 4
    drop_last: True

ctc_cost: !name:speechbrain.nnet.losses.ctc_loss
    blank_index: !ref <blank_index>

seq_cost: !name:speechbrain.nnet.losses.nll_loss
    label_smoothing: !ref <label_smoothing>

train_logger: !new:speechbrain.utils.train_logger.FileTrainLogger
    save_file: !ref <train_log>
    summary_fns:
        CER: !name:speechbrain.utils.train_logger.summarize_error_rate
        WER: !name:speechbrain.utils.train_logger.summarize_error_rate

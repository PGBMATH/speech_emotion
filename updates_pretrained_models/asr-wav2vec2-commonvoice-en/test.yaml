sample: example.wav
cls: EncoderDecoderASR
fnx: transcribe_batch
dataset: CommonVoice_EN
recipe_yaml: recipes/CommonVoice/ASR/CTC/hparams/train_en_with_wav2vec.yaml
overrides:
  output_folder: !ref tests/tmp/<dataset>
dataio: |
    from recipes.CommonVoice.common_voice_prepare import prepare_common_voice
    run_on_main(
        prepare_common_voice,
            kwargs={
                "data_folder": recipe_hparams["data_folder"],
                "save_folder": recipe_hparams["save_folder"],
                "train_tsv_file": recipe_hparams["train_tsv_file"],
                "dev_tsv_file": recipe_hparams["dev_tsv_file"],
                "test_tsv_file": recipe_hparams["test_tsv_file"],
                "accented_letters": recipe_hparams["accented_letters"],
                "language": recipe_hparams["language"],
                "skip_prep": recipe_hparams["skip_prep"],
            },
        )
    from recipes.CommonVoice.ASR.seq2seq.train_with_wav2vec import dataio_prepare
test_datasets: dataio_prepare(recipe_hparams, model.tokenizer)[2]
test_loader: test_dataloader_options
performance:
  CER:
    handler: cer_computer
    field: error_rate
  WER:
    handler: error_rate_computer
    field: error_rate
predicted: "[wrd.split(' ') for wrd in predictions[0]]"
targeted: "[wrd.split(' ') for wrd in batch.wrd]"
append: ids, predicted, targeted
